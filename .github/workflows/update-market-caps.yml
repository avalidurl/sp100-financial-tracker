name: Update Market Caps

# Update market caps more frequently (daily after market close)
on:
  schedule:
    # Run weekdays at 22:00 UTC (after US market close: 4 PM ET = 8-9 PM UTC)
    - cron: '0 22 * * 1-5'
  
  workflow_dispatch: # Allow manual trigger

jobs:
  update-market-caps:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
      
      - name: Update market caps from Yahoo Finance
        run: |
          python3 << 'PYTHON_SCRIPT'
          import json
          import requests
          import time
          
          print("📊 Updating market caps from Yahoo Finance...")
          
          # Load current data
          with open('data/financial_data.json', 'r') as f:
              companies = json.load(f)
          
          updated_count = 0
          failed = []
          
          for i, company in enumerate(companies):
              symbol = company['symbol']
              print(f"[{i+1}/{len(companies)}] Fetching {symbol}...")
              
              try:
                  url = f"https://query1.finance.yahoo.com/v8/finance/chart/{symbol}"
                  response = requests.get(url, timeout=10, headers={
            'User-Agent': 'Mozilla/5.0'
                  })
                  
                  if response.ok:
            data = response.json()
            result = data.get('chart', {}).get('result', [{}])[0]
            meta = result.get('meta', {})
            
            price = meta.get('regularMarketPrice')
            market_cap = meta.get('marketCap')
            
            if market_cap:
                company['market_cap'] = market_cap
                company['market_cap_updated'] = time.strftime('%Y-%m-%dT%H:%M:%S')
                updated_count += 1
                print(f"  ✓ Updated: ${market_cap/1e9:.2f}B")
            elif price and 'shares_outstanding' in company:
                # Calculate from price x shares
                market_cap = int(price * company['shares_outstanding'])
                company['market_cap'] = market_cap
                company['market_cap_updated'] = time.strftime('%Y-%m-%dT%H:%M:%S')
                updated_count += 1
                print(f"  ✓ Calculated: ${market_cap/1e9:.2f}B")
            else:
                print(f"  ⊘ No market cap data")
                failed.append(symbol)
                  else:
            print(f"  ✗ HTTP {response.status_code}")
            failed.append(symbol)
                  
                  time.sleep(0.1)  # Rate limiting
                  
              except Exception as e:
                  print(f"  ✗ Error: {str(e)}")
                  failed.append(symbol)
          
          # Save updated data
          with open('data/financial_data.json', 'w') as f:
              json.dump(companies, f, indent=2)
          
          with open('public/data/financial_data.json', 'w') as f:
              json.dump(companies, f, indent=2)
          
          # Update timestamp
          with open('data/last_updated.json', 'w') as f:
              json.dump({'market_caps': time.strftime('%Y-%m-%dT%H:%M:%S')}, f)
          
          with open('public/data/last_updated.json', 'w') as f:
              json.dump({'market_caps': time.strftime('%Y-%m-%dT%H:%M:%S')}, f)
          
          print(f"\n✅ Updated {updated_count}/{len(companies)} companies")
          if failed:
              print(f"❌ Failed: {', '.join(failed[:5])}")
          PYTHON_SCRIPT
      
      - name: Commit and push
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          if git diff --quiet data/capex_data.json public/data/capex_data.json; then
            echo "No market cap changes"
          else
            git add data/capex_data.json public/data/capex_data.json data/last_updated.json public/data/last_updated.json
            git commit -m "🤖 Auto-update: Market caps from Yahoo Finance

📊 Updated: $(date -u +"%Y-%m-%d %H:%M UTC")
💰 Source: Yahoo Finance (FREE)
"
            git push
            
            echo "## 💰 Market Caps Updated!" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "✅ Successfully updated market capitalizations" >> $GITHUB_STEP_SUMMARY
            echo "📊 Source: Yahoo Finance (FREE)" >> $GITHUB_STEP_SUMMARY
            echo "🕐 Updated: $(date -u +"%Y-%m-%d %H:%M UTC")" >> $GITHUB_STEP_SUMMARY
          fi
      
      - name: Notify on failure
        if: failure()
        run: |
          echo "## ❌ Workflow Failed!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The market cap update workflow has failed." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Error Details:**" >> $GITHUB_STEP_SUMMARY
          echo "- Workflow: ${{ github.workflow }}" >> $GITHUB_STEP_SUMMARY
          echo "- Run: ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          echo "- Commit: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🔍 Check the logs above for details." >> $GITHUB_STEP_SUMMARY
          echo "💡 You can manually trigger a retry from the Actions tab." >> $GITHUB_STEP_SUMMARY

